#!/bin/bash
#
# Tests the correctness of the Uniform Reliable Broadcast application.
#
# This is an example script that shows the general structure of the
# test. The details and parameters of the actual test might differ.
#

#time to wait for correct processes to broadcast all messages (in seconds)
#(should be adapted to the number of messages to send)

time_to_finish=$1

init_time=2

nb_messages_broadcast=$1

nb_processes=$3

#configure lossy network simulation
sudo tc qdisc change dev lo root netem delay 50ms 200ms loss 10% 25% reorder 25% 50%



rm membership

echo "$nb_processes" >> membership

for ((i=1;i<= $nb_processes ;i++)); 
do 
   echo "$i 127.0.0.1 1100$i" >> membership 
done

#start 5 processes, each broadcasting 1000 messages
for i in `seq 1 $nb_processes`
do
    ./da_proc $i membership $nb_messages_broadcast &
    da_proc_id[$i]=$!
done

#leave some time for process initialization
sleep $init_time

#do some nasty stuff like process crashes and delays
#example:
seed=$RANDOM
victim1=1
victim2=2
victim3=3
victim4=4

echo "victim1 (paused): $victim1"
echo "victim2 (killed): $victim2"
echo "victim3 (paused): $victim3"
echo "victim4 (killed): $victim4"

kill -STOP "${da_proc_id[$victim1]}" #pause process 1
sleep 0.5

kill -STOP "${da_proc_id[$victim3]}" #pause process 3
sleep 1

kill -TERM "${da_proc_id[$victim2]}" #crash process 2
da_proc_id[$victim]=""

kill -CONT "${da_proc_id[$victim3]}" #resume process 3

#start broadcasting
for i in `seq 1 $nb_processes`
do
    if [ -n "${da_proc_id[$i]}" ]; then
	kill -USR2 "${da_proc_id[$i]}"
    fi
done

#do some more nasty stuff
#example:
kill -TERM "${da_proc_id[$victim4]}" #crash process 4
da_proc_id[$victim]=""

kill -CONT "${da_proc_id[$victim1]}" #resume process 1

#leave some time for the correct processes to broadcast all messages
sleep $time_to_finish

#stop all processes
for i in `seq 1 $nb_processes`
do
    if [ -n "${da_proc_id[$i]}" ]; then
	kill -TERM "${da_proc_id[$i]}"
    fi
done

#wait until all processes stop
for i in `seq 1 $nb_processes`
do
	wait "${da_proc_id[$i]}"
done

#check logs for correctness
for i in `seq 1 $nb_processes`
do
	wc -l  output/da_proc_$i.out
done

n1=$(($nb_processes + 1))
n2=$(($n1 * $nb_messages_broadcast))

echo "$n2 expected without deaths"

echo "Correctness test done."
